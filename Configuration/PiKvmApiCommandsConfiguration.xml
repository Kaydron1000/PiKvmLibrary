<?xml version="1.0" encoding="utf-8" ?>
<z:PiKvmLibraryConfiguration xmlns:z="http://PiKvmLibrary.local/PiKvmConnectionsConfigurationSchema.xsd">
  <z:Connections Version="0.0" DefaultIgnoreCertificateErrors="true" EnableSingleQuoteJson="true" DefaultPasswordPromptHeader="X-KVMD-Passwd" DefaultUserNamePromptHeader="X-KVMD-User" DefaultPreferCookieAuthentication="true">
    <Connection BaseURI="https://192.168.1.183" Name="OriginalConnection">
      <Endpoints>
        <Endpoint Name="Login_Endpoint" EndpointTimeout_Sec="10" Description="Gets the session-based cookie access token for the user session with valid credentials.">
          <HttpRequest Name="Login" Endpoint="api/auth/login" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Contents>
              <ContentDictionary>
                <Content Name="user" Value="{USER}" Description="Valid username to log into the kvmd web client."/>
                <Content Name="passwd" Value="{PASSWD}" Description="Valid password associated with the username to log into the kvmd web client."/>
              </ContentDictionary>
            </Contents>
            <Parameters>
              <Parameter Name="USER" ValueType="string"/>
              <Parameter Name="PASSWD" ValueType="string"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="Info_Endpoint" EndpointTimeout_Sec="10" Description="Returns the general information about the PiKVM device.">
          <HttpRequest Name="Info" Endpoint="api/info" HttpMethod="GET" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="fields" Value="{FIELDS}" Description="Return only specified categories	auth, extras, fan, hw, meta, system "/>
            </Querys>
            <Parameters>
              <Parameter Name="FIELDS"  Optional="true"   ValueType="string"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="PrintText_Endpoint" EndpointTimeout_Sec="10" Description="Transmits user-defined text to emulate typing it on the PiKVM by sequencing key presses.">
          <HttpRequest Name="PrintText" Endpoint="/api/hid/print" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Contents>
              <ContentString String="{CONTENTSTRING}"/>
            </Contents>
            <Querys>
              <Query Name="limit"   Value="{LIMIT}"   Optional="true"   Description="Maximum characters to process. 0 = no limit. Default: 1024"/>
              <Query Name="keymap"  Value="{KEYMAP}"  Optional="true"   Description="Keymap to use (defaults to system default)."/>
              <Query Name="slow"    Value="{SLOW}"    Optional="true"   Description="Enables slow typing mode (regular large intervals between key presses), false by default."/>
            </Querys>
            <Parameters>
              <Parameter Name="CONTENTSTRING"                   ValueType="string"/>
              <Parameter Name="SLOW"          Optional="true"   ValueType="bool"/>
              <Parameter Name="LIMIT"         Optional="true"   ValueType="integer"/>
              <Parameter Name="KEYMAP"        Optional="true"   ValueType="string"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="SendKeyboardKey_Endpoint" EndpointTimeout_Sec="10" Description="Transmits a command to emulate a single key press on the PiKVM.">
          <HttpRequest Name="SendKeyboardKey" Endpoint="/api/hid/events/send_key" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="key"     Value="{KEY}"                       Description="Key identifier to send. Expected Value Key{LETTER} or Digit{NUMBER}. Other valid identifiers, 'Enter', 'Escape', 'Backspace', 'Tab', 'ControlLeft' 'AltLeft' 'Delete'"/>
              <Query Name="state"   Value="{STATE}"   Optional="true"   Description="Key state: true(1) for press, false(0) for release. If state is not used the key will be stroked up and down for a single press."/>
              <Query Name="finish"  Value="{FINISH}"  Optional="true"   Description="Releases non-modifier keys right after pressing them so that they don't get stuck when the connection is not stable. Must use state to use finish. Defaults to false."/>
            </Querys>
            <Parameters>
              <Parameter Name="KEY"                       ValueType="string"/>
              <Parameter Name="STATE"   Optional="true"   ValueType="bool"/>
              <Parameter Name="FINISH"  Optional="true"   ValueType="bool"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="SendKeyboardMultiKeyPress_Endpoint" EndpointTimeout_Sec="10" Description="Sends a keyboard shortcut, or key combination, to be typed on the PiKVM. Expected Value Key{LETTER} or Digit{NUMBER}. Other valid identifiers, 'Enter', 'Escape', 'Backspace', 'Tab', 'ControlLeft' 'AltLeft' 'Delete'">
          <HttpRequest Name="SendKeyboardMultiKeyPress" Endpoint="/api/hid/events/send_shortcut" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="keys" Value="{KEYS}" Description="Comma-separated list of key names."/>
            </Querys>
            <Parameters>
              <Parameter Name="KEYS" ValueType="string"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>

        <Endpoint Name="HidInformation_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="HidInformation" Endpoint="api/hid" HttpMethod="GET" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="StreamerInformation_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="StreamerInformation" Endpoint="api/streamer" HttpMethod="GET" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseOutputType_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MouseOutput" Endpoint="api/hid/set_params" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="mouse_output" Value="{MOUSETYPE}"/>
            </Querys>
            <Parameters>
              <Parameter Name="MOUSETYPE" ValueType="string"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseOutputAbsolute_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MouseOutputAbsolute" Endpoint="api/hid/set_params" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="mouse_output" Value="usb"/>
            </Querys>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseOutputRelative_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MouseOutputRelative" Endpoint="api/hid/set_params" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="mouse_output" Value="usb_rel"/>
            </Querys>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseMoveRelative_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MousMoveRelative" Endpoint="api/hid/events/send_mouse_relative" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="delta_x" Value="{DELTA_X}"/>
              <Query Name="delta_y" Value="{DELTA_Y}"/>
            </Querys>
            <Parameters>
              <Parameter Name="DELTA_X" ValueType="double"/>
              <Parameter Name="DELTA_Y" ValueType="double"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseMoveAbsolute_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MouseMoveAbsolute" Endpoint="api/hid/events/send_mouse_move" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="to_x" Value="{TO_X}"/>
              <Query Name="to_y" Value="{TO_Y}"/>
            </Querys>
            <Parameters>
              <Parameter Name="TO_X" ValueType="double"/>
              <Parameter Name="TO_Y" ValueType="double"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseButton_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MouseButton" Endpoint="api/hid/events/send_mouse_button" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="button" Value="{BUTTON}"/>
            </Querys>
            <Parameters>
              <Parameter Name="BUTTON" ValueType="string"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="MouseButtonState_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="MouseButtonState" Endpoint="api/hid/events/send_mouse_button" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="button" Value="{BUTTON}"/>
              <Query Name="state" Value="{STATE}"/>
            </Querys>
            <Parameters>
              <Parameter Name="BUTTON" ValueType="string"/>
              <Parameter Name="STATE" ValueType="bool"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="H264_GOP_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="H264GOP" Endpoint="api/streamer/set_params" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="h264_gop" Value="{GOP}"/>
            </Querys>
            <Parameters>
              <Parameter Name="GOP" ValueType="int"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="H264_Bitrate_Endpoint" EndpointTimeout_Sec="10">
          <HttpRequest Name="H264_Bitrate" Endpoint="api/streamer/set_params" HttpMethod="POST" HTTP_GenericLogEnabled="true" HTTP_HttpLogEnabled="false">
            <Querys>
              <Query Name="h264_bitrate" Value="{BITRATE}"/>
            </Querys>
            <Parameters>
              <Parameter Name="BITRATE" ValueType="int"/>
            </Parameters>
          </HttpRequest>
        </Endpoint>
        <Endpoint Name="APIStream_Endpoint" EndpointTimeout_Sec="10">
          <Websocket Endpoint="api/ws?stream=1" GenericLogEnabled="true" MessageLogEnabled="true" Stream_TaskEnabled="true">
          </Websocket>
        </Endpoint>
        <Endpoint Name="API_Endpoint" EndpointTimeout_Sec="10">
          <Websocket Endpoint="api/ws?stream=0" GenericLogEnabled="true" MessageLogEnabled="true" Stream_TaskEnabled="true">
            <WSCommands>
              <WsCommand Name="MouseMoveABS" JsonTemplate="{'event_type': 'mouse_move', 'event': {'to': {'x': {TOX}, 'y': {TOY}}}}">
                <Parameters>
                  <Parameter Name="TOX" ValueType="int"/>
                  <Parameter Name="TOY" ValueType="int"/>
                </Parameters>
              </WsCommand>
              <WsCommand Name="MouseMoveRelative" JsonTemplate="{'event_type': 'mouse_relative', 'event': {'delta': {'x': {TOX}, 'y': {TOY}}, 'squash': false}}">
                <Parameters>
                  <Parameter Name="TOX" ValueType="int"/>
                  <Parameter Name="TOY" ValueType="int"/>
                </Parameters>
              </WsCommand>
              <WsCommand Name="MouseButton" JsonTemplate="{'event_type': 'mouse_button', 'event': {'button': '{BUTTON}'}}">
                <Parameters>
                  <Parameter Name="BUTTON" ValueType="string"/>
                </Parameters>
              </WsCommand>
              <WsCommand Name="KeyPress" JsonTemplate="{'event_type': 'key', 'event': {'key': '{KEY}', 'state': true, 'finish': true }}">
                <Parameters>
                  <Parameter Name="KEY" ValueType="string"/>
                </Parameters>
              </WsCommand>
              <WsCommand Name="KeyState" JsonTemplate="{'event_type': 'key', 'event': {'key': '{KEY}', 'state': '{STATE}' }}">
                <Parameters>
                  <Parameter Name="KEY" ValueType="string"/>
                  <Parameter Name="STATE" ValueType="string"/>
                </Parameters>
              </WsCommand>
            </WSCommands>
          </Websocket>
        </Endpoint>
        <Endpoint Name="MediaStream_Endpoint" EndpointTimeout_Sec="10">
          <Websocket Endpoint="api/media/ws" GenericLogEnabled="true" MessageLogEnabled="true" Stream_TaskEnabled="true">
            <WSCommands>
              <WsCommand Name="StartStream" JsonTemplate="{'event_type': 'start', 'event': {'type': 'video', 'format': 'h264'}}"/>
            </WSCommands>
            <SettingCommands>
              <Command EndpointName="H264_Bitrate_Endpoint"/>
              <Command EndpointName="H264_GOP_Endpoint"/>
            </SettingCommands>
            <PostProcessStream>
              <FFmpegConfiguration ApplicationPath="C:\ffmpeg\ffmpeg-7.1.1-full_build-shared\ffmpeg-7.1.1-full_build-shared\bin\ffmpeg.exe"
                                   ApplicationArguments="-f h264 -i pipe:0 -vf fps=10 -f image2pipe -vcodec mjpeg pipe:1"
                                   GenericLogEnabled="true"
                                   OutputBufferSize="4096"
                                   OuputLogEnabled="true"
                                   ErrorStream_TaskEnabled="true"
                                   StreamOutput_TaskEnabled="true"/>
            </PostProcessStream>
          </Websocket>
        </Endpoint>
      </Endpoints>
    </Connection>
  </z:Connections>
</z:PiKvmLibraryConfiguration>
